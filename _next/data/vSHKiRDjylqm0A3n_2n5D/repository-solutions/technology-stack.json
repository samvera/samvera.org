{"pageProps":{"content":"The Samvera Community supports not one software product, but rather a collection of components to create a repository solution. These components draw on many more open source components that are maintained by other open source communities. The diagram below outlines the Hyrax and Hyku technology stack in detail, followed by a detailed explaination of the components. \n\nA Samvera repository solution provides functionality for the full range of CRUD services (create, read, update, delete).  To do this it employs a number of [Ruby on Rails](https://rubyonrails.org/) based components (or \"gems\") in conjunction with other open source software products.\n\n![Samvera technology stack diagram](../images/Hyrax-hyku-stack-2025-07.png)\n\n*Hyrax and Hyku include built-in support for using either Postgres or Fedora 6 for metadata storage. The options for file storage are disk storage or Fedora 6; Hyku also supports Amazon S3-compatible cloud storage out-of-the-box, and this is an option in Hyrax that is currently without official support. Some applications may also optionally use Solr/Blacklight for secondary indexing of metadata.\n\nNew applications can use any of these options, or use a custom adapter to connect to a different backend (see “External Adapters” in the Hyrax wiki). Older or legacy applications may use the Wings adapter to connect to Fedora 4, but this is not recommended for new applications, since Fedora 4 is end-of-life and the Wings adapter will be deprecated in a future Hyrax/Hyku release.\n\nSee the “Valkyrie” section below for a more detailed explanation of adapters and how they fit into the Samvera architecture.\n\n## **Samvera Applications**\n\nBroadly, these are[ Ruby on Rails](http://rubyonrails.org/) based applications, such as[ Hyrax](https://hyrax.samvera.org/), that follow Samvera conventions. Other Hyrax-based applications supported by the community include[ Hyku](https://hyku.samvera.org/) (Hyrax with multi-tenancy and other features) and[ Avalon](https://avalon.samvera.org/) (focused on audio/video materials).\n\nWhile it is possible to create your own Samvera application by assembling the right components, and this has been a common practice in the Samvera community in the past, ongoing maintenance of home grown solutions will be more expensive than sharing maintenance costs with the rest of the community.\n\n## **Valkyrie**\n\n[Valkyrie](https://github.com/samvera/valkyrie) is a gem that handles the transfer of data between a persistent data store (e.g. a database) and the Samvera application. It handles core functions like creating, reading, updating, and deleting files or metadata using “adapters.” By default, Valkyrie ships with adapters for the backends pictured above. But you can also write your own adapter if the default adapters don’t fit your needs.\n\nValkyrie gives organizations the flexibility to choose different backends, while sharing front-end logic and code. It can also make migration between backend systems easier by reading from one data store and writing to another. You can find a[ detailed rationale and FAQ](https://github.com/samvera/valkyrie/wiki/Frequently-Asked-Questions) on the Hyrax GitHub wiki. In the past, older Samvera applications were locked into using Fedora 4 as the persistence layer and used[ Active Fedora](https://github.com/samvera/active_fedora) as the middleware to connect to Fedora 4.\n\nInstructions for configuration with various adapters can be found on the[ Valkyrie GitHub README page](https://github.com/samvera/valkyrie).\n\n### **Storage Adapter and Backends**\n\nThe storage adapter connects the Samvera application to the place where your digital objects are stored or will be stored once uploaded to the application. Here is a list of possible backends that are supported by both Hyrax and Hyku, unless stated otherwise:\n\n* In-Memory - used primarily for testing and not recommended in production\n* Disk Storage - this may be a large[ NFS Share](https://www.techtarget.com/searchenterprisedesktop/definition/Network-File-System) in production\n* [Fedora 6](https://fedorarepository.org/) - repository software that supports[ OCFL (Oxford Common File Layout)](https://ocfl.io/). Interested developers may want to explore[ Sirenia](https://github.com/samvera/hyrax/blob/main/CONTAINERS.md#sirenia-internal-test-app-with-valkyrie-connector-to-fedora), a test/sample application compatible with Fedora 6.\n* S3 Cloud Storage (supported in Hyku only) - Samvera apps can use the[ Valkyrie-Shrine adapter/gem](https://github.com/samvera-labs/valkyrie-shrine) to connect to cloud storage. Although only Hyku comes bundled with S3 support, Hyrax can still be configured to use valkyrie-shrine.\n\n### **Metadata Adapter and Storage**\n\nThe metadata adapter connects the application to the metadata store. The metadata store acts as the primary, canonical source of metadata.\n\nSome institutions may want to implement a secondary index for search/querying. For example, if your institution wants to store linked data in Fedora but use Solr for search, then you would use the *metadata adapter* for Fedora 6 and the *indexing adapter* for Solr (see below).\n\nHere is a list of possible metadata stores that are supported by Hyrax & Hyku:\n\n* In-Memory - used primarily for testing and not recommended in production\n* [Postgres (database)](https://www.postgresql.org/) - interested developers may want to explore[ Koppie](https://github.com/samvera/hyrax/blob/main/CONTAINERS.md#koppie-internal-test-app-with-valkyrie-connector-to-postgres), a Hyrax test/sample application that uses Postgres for metadata storage.\n* [Fedora 6](https://fedorarepository.org/) - repository software that supports Linked Data\n\n### **Indexing Adapter and Storage (optional)**\n\nCurrently, only Apache[ Solr](https://solr.apache.org/) is supported for this purpose. Solr is used with/by[ Blacklight](https://github.com/projectblacklight/blacklight) to provide a search interface for metadata in Samvera applications.\n\n## **Middleware & Plugins**\n\nNote: this list is non-exhaustive.\n\n### **Hydra-Head**\n\n[Hydra-Head](https://github.com/samvera/hydra-head) is a Ruby-on-Rails gem containing the core code for a web application using the full stack of Samvera building blocks.\n\n\n### **Blacklight**\n\nMuch of our search and display behavior is inherited from[ Blacklight](http://projectblacklight.org/). Many Samvera institutions also run Blacklight applications separately from Samvera, to provide search and discovery for their collections. The Blacklight Project also has many of its own plugins, such as[ Spotlight](https://github.com/projectblacklight/spotlight), for building virtual exhibits, and[ GeoBlacklight](http://geoblacklight.org/), which enhances Blacklight for use with geospatial data.\n\nBlacklight relies on[ RSolr](https://github.com/rsolr/rsolr), a ruby gem for connecting to Solr using the Solr API.\n\n\n### **Hydra Derivatives**\n\nA[ gem to create derivatives](https://github.com/samvera/hydra-derivatives) for uploaded content. This might include, for example, generating thumbnails for large images, down-sampled audio and video for web steaming, or thumbnail snapshots of PDF documents.\n\n\n### **Hydra Editor**\n\n[Hydra-editor](https://github.com/samvera/hydra-editor) is a basic editor for Samvera objects. It provides the edit interface for works and collections.\n\n\n### **Questioning Authority**\n\n[Questioning Authority](https://github.com/samvera/questioning_authority) provides a set of uniform RESTful routes to query any controlled vocabulary or set of authority terms. Results are returned in JSON and can be used within the context of a Rails application or any other Ruby environment.\n\n[Questioning Authority - How do I use this?](https://github.com/samvera/questioning_authority?tab=readme-ov-file#how-do-i-use-this)\n\n[Questioning Authority Wiki](https://github.com/samvera/questioning_authority/wiki)\n\n\n### **RIIIF**\n\nThe default[ IIIF](https://iiif.io/) server (see[ Github repo](https://github.com/sul-dlss/riiif)) that serves images to deep-zoom image viewers, such as[ Universal Viewer](https://universalviewer.io/) (default iiif viewer in Hyrax/Hyku).\n\nAlternatives for RIIIF include[ node-iiif](https://github.com/samvera/node-iiif?tab=readme-ov-file#install-with-npm) (NodeJS implementation), or[ serverless-iiif](https://github.com/samvera/serverless-iiif) (AWS Serverless Application).\n\n\n### **File Characterization**\n\n[Hydra File Characterization](https://github.com/samvera/hydra-file_characterization) uses[ fits](https://github.com/harvard-lts/fits) and[ ffprobe](https://ffmpeg.org/ffprobe.html) to characterize files and extract metadata about them. It might tell you what kind of image encoding an image uses, along with it’s height and width, for example.\n\n\n### **Browse-Everything**\n\n[Browse-everything](https://github.com/samvera/browse-everything) is a rails engine providing access to files in cloud storage. Currently there are drivers implemented for Dropbox, Skydrive, Google Drive, Box, and a server-side directory share.\n\n[Getting Started with BrowseEverything](https://github.com/samvera/browse-everything?tab=readme-ov-file#getting-started)\n\n[Configuring BrowseEverything and using JavaScript methods](https://github.com/samvera/browse-everything/wiki)\n\n\n### **LDP**\n\nA ruby gem called[ ldp](https://github.com/samvera/ldp) for implementing LDP ([Linked Data Platform](https://wiki.lyrasis.org/display/FEDORA6x/Linked+Data+Platform)) interaction patterns with Fedora 6 or Fedora 4 (legacy).\n\n\n### **Bixby**\n\nBixby is a gem containing the default configuration settings for [RuboCop](https://github.com/rubocop/rubocop) used to enforce common Ruby style guidelines across Samvera community projects. (See[ how to use bixby](https://github.com/samvera/bixby?tab=readme-ov-file#to-use-this).)\n\n\n## **Legacy Components**\n\n**The following components are** **not recommended in new Samvera applications** because they are deprecated, or will be deprecated in the near future. They are documented for migration and historical purposes.\n\n\n### **Active Fedora**\n\n[ActiveFedora](https://github.com/samvera/active_fedora) provides an[ Active Record](http://guides.rubyonrails.org/active_record_basics.html)-like interface and pattern to persist objects to Fedora 4.\n\n\n### **Wings**\n\nWings is the storage and metadata adapter for Fedora 4. It is “a toolkit integrating Valkyrie into Hyrax as a bridge away from the hard dependency on ActiveFedora.”\n\n[Notes from the Hyrax Github](https://github.com/samvera/hyrax/blob/main/lib/wings.rb):\n \"Wings\" is primarily an isolating namespace for code intended to be removed after a full transition to \"Valkyrie\" as the persistence middleware for Hyrax. Applications may find it useful to depend directly on this code to facilitate a smooth code migration, much in the way it is being used in this engine. However, these dependencies should be considered temporary: this code will be deprecated for removal in a future release.\n","frontmatter":{"title":"Technology stack","date":"2016-10-07"},"openGraphData":{"og:description":"Samvera™ is a vibrant and welcoming community of information and technology professionals who share challenges, build expertise, and create sustainable, best-in-class solutions, making the world’s digital collections accessible now and into the future. Samvera’s suite of repository software tools offers flexible and rich user interfaces tailored to distinct content types on top of a robust back end – giving adopters the best of both worlds.","og:image":"images/1200px-Samvera_logo.png","og:imageUrl:secure_url":"images/1200px-Samvera_logo.png","og:site_name":"Technology stack - Repository Solutions - Samvera","og:title":"Technology stack - Repository Solutions - Samvera","og:type":"website","og:url":"https://samvera.org/repository-solutions/technology-stack"},"slug":"technology-stack"},"__N_SSG":true}